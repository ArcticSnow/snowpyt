Metadata-Version: 1.1
Name: snowpyt
Version: 0.1.67
Summary: A Python project to visualize snowpit
Home-page: https://github.com/ArcticSnow/snowpyt
Author: Simon Filhol
Author-email: simon.filhol@geo.uio.no
License: MIT
Description-Content-Type: UNKNOWN
Description: Snowpyt: an open-source library to visualize snowpits in Python
        ===============================================================
        
        Simon Filhol, November 2016, copyright under the MIT license terms, see
        the License.txt file
        
        LAST MODIFIED: September 2017 (or see date on github file history)
        
        Feel free to contribute to the project!!!! Many new features can be
        added...
        
        To do:
        ------
        
        High Priority
        ~~~~~~~~~~~~~
        
        -  write function to save and load pit to and from pickle format
           (currently not working)
        -  reorganize package example, standard excel and csv snowpit file
        -  make ground appear to comfirm the user that the pit reached ground.
           add note about ground type.
        
        Low priority
        ~~~~~~~~~~~~
        
        -  specify the figure size and adjust font size in respect
        -  render the medatadata text better, convert date to a readable date
        -  put option to adjust figure size to desired size and dpi. Return axis
           variable from plotting function for more advanced plotting if needed
           (i.e. multiple samples)
        -  add option to save pits in Pickle format or CSV
        -  add option to save figure in matplotlib format
        -  add option to plot when multiple sample columns are given.
        
        Objective
        ---------
        
        The objective of this library is to provide visualization tool for
        snowpit data. Started for the need of the Svalbard Snow Research group,
        this package should evolve to include more snowpit type and
        visualization scheme.
        
        The snow grain classification follows the guidelines provided by the
        UNESCO `International Classification for Seasonal Snow on the
        Ground <http://unesdoc.unesco.org/images/0018/001864/186462e.pdf>`__
        (Fierz et al., 2009)
        
        Fierz, C., Amstrong, R.L., Durand, Y., Etchevers, P., Greene, E.,
        McClung, D.M., Nishimura, K., Satyawali, P.K. and Sokratov, S.A.
        2009.The International Classification for Seasonal Snow on the Ground.
        IHP-VII Technical Documents in Hydrology N°83, IACS Contribution N°1,
        UNESCO-IHP, Paris.
        
        Installation
        ------------
        
        Last stable version from the Pypi repository
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        Simply run the following in your terminal:
        
        .. code:: bash
        
            pip install snowpyt
        
        Last development version for contributing to the project:
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        Clone the github repository to a local directory using the following
        command in your terminal
        
        .. code:: bash
        
            git clone https://github.com/ArcticSnow/snowpyt.git
        
        or by downloading the package
        
        The branch 'master' consists of the latest stable version. Other
        develepment versions are included in other git branches.
        
        The package contains all the functions to plot the snowpit if library
        requirements are met. It also contains data samples to test the library.
        
        requirements
        ~~~~~~~~~~~~
        
        Python 2.7.9 with the following libraries: -
        `numpy <http://www.numpy.org/>`__ -
        `matplotlib <http://matplotlib.org/>`__ -
        `pandas <http://pandas.pydata.org/>`__ - xlrd
        
        Use
        ---
        
        1. Snowpit must be formated following the template file
           "Standard\_pit.xlsx"
        
        -  requirements:
        
           -  To see the supported list of snowflakes input, see the python
              dictionnary snowflake\_dict in the pit\_class.py file.
        
           -  Only ASCII characters in fields. Currently not supporting special
              characters
        
        2. Save the excel or libreoffice file in .xslx format (default Excel
           format).
        
        3. Load the snowpit into snowpyt
        
        .. code:: python
        
            from snowpyt import pit_class as pc
        
            path_to_file = 'snowpyt/data_example/20170209_Finse_snowpit.xlsx'
        
            mypit = pc.Snowpit()
            mypit.filename = path_to_file
            mypit.import_xlsx()
        
            mypit.plot(metadata=True)
            mypit.plot(plots_order=['density', 'temperature', 'stratigraphy','crystal size'], metadata=True)
        
            mypit.metadata.__dict__
        
        4. It is also possible to load data from an .xml file formatted
           according to `CAAML format <http://caaml.org/>`__
        
        .. code:: python
        
            from snowpyt import pit_class as pc
        
            path_to_file = 'path to xml file in CAAML format'
        
            mypit = pc.Snowpit()
            mypit.filename = path_to_file
            mypit.import_xml()
        
            mypit.plot(metadata=True)
            mypit.plot(plots_order=['density', 'temperature', 'stratigraphy','crystal size'], metadata=True)
        
        5. All the data table are loaded as a Pandas dataframe within the
           snowpyt class object
        
        Type the following in your Python console to see the loaded datatable:
        
        .. code:: python
        
            mypit.table
        
        This allows for custom plotting using the library of your choice on top
        of the existing plotting function
        
        6. Extra Sample Values
        
        Extra column of sample values can be added to the excel file. **Column
        name must be unique**
        
        The current plotting functions will not plot these extra columns, only
        the first one. However the values are loaded via pandas in the table as
        a dataframe (see 5.)
        
        Want to contribute?
        -------------------
        
        Once you have cloned the project to your home directory, create a git
        branch and here you go. When your edits are stable, merge with the
        master branch. See this neat tutorial about git branching and merging,
        `here <https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging>`__
        
        List of Contributor
        ~~~~~~~~~~~~~~~~~~~
        
        -  Simon Filhol
        -  Guillaume Sutter
        -  [add your name]
        
        Example
        -------
        
        .. figure:: snowpyt/Standard_pit.png
           :alt: Example snowpit
        
           Example snowpit
        
Keywords: Plotting,snow,glaciology,science
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
